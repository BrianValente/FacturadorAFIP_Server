/* soapServiceSoap12Proxy.h
   Generated by gSOAP 2.8.89 for soap/afip_soap.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapServiceSoap12Proxy_H
#define soapServiceSoap12Proxy_H
#include "soapH.h"

    class SOAP_CMAC ServiceSoap12Proxy {
      public:
        /// Context to manage proxy IO and data
        struct soap *soap;
        /// flag indicating that this context is owned by this proxy and should be deleted by the destructor
        bool soap_own;
        /// Endpoint URL of service 'ServiceSoap12Proxy' (change as needed)
        const char *soap_endpoint;
        /// Variables globally declared in soap/afip_soap.h, if any
        /// Construct a proxy with new managing context
        ServiceSoap12Proxy();
        /// Copy constructor
        ServiceSoap12Proxy(const ServiceSoap12Proxy& rhs);
        /// Construct proxy given a shared managing context
        ServiceSoap12Proxy(struct soap*);
        /// Construct proxy given a shared managing context and endpoint URL
        ServiceSoap12Proxy(struct soap*, const char *soap_endpoint_url);
        /// Constructor taking an endpoint URL
        ServiceSoap12Proxy(const char *soap_endpoint_url);
        /// Constructor taking input and output mode flags for the new managing context
        ServiceSoap12Proxy(soap_mode iomode);
        /// Constructor taking endpoint URL and input and output mode flags for the new managing context
        ServiceSoap12Proxy(const char *soap_endpoint_url, soap_mode iomode);
        /// Constructor taking input and output mode flags for the new managing context
        ServiceSoap12Proxy(soap_mode imode, soap_mode omode);
        /// Destructor deletes deserialized data and its managing context, when the context was allocated by the constructor
        virtual ~ServiceSoap12Proxy();
        /// Initializer used by constructors
        virtual void ServiceSoap12Proxy_init(soap_mode imode, soap_mode omode);
        /// Return a copy that has a new managing context with the same engine state
        virtual ServiceSoap12Proxy *copy();
        /// Copy assignment
        ServiceSoap12Proxy& operator=(const ServiceSoap12Proxy&);
        /// Delete all deserialized data (uses soap_destroy() and soap_end())
        virtual void destroy();
        /// Delete all deserialized data and reset to default
        virtual void reset();
        /// Disables and removes SOAP Header from message by setting soap->header = NULL
        virtual void soap_noheader();
        /// Get SOAP Header structure (i.e. soap->header, which is NULL when absent)
        virtual ::SOAP_ENV__Header *soap_header();
        /// Get SOAP Fault structure (i.e. soap->fault, which is NULL when absent)
        virtual ::SOAP_ENV__Fault *soap_fault();
        /// Get SOAP Fault subcode QName string (NULL when absent)
        virtual const char *soap_fault_subcode();
        /// Get SOAP Fault string/reason (NULL when absent)
        virtual const char *soap_fault_string();
        /// Get SOAP Fault detail XML string (NULL when absent)
        virtual const char *soap_fault_detail();
        /// Close connection (normally automatic, except for send_X ops)
        virtual int soap_close_socket();
        /// Force close connection (can kill a thread blocked on IO)
        virtual int soap_force_close_socket();
        /// Print fault
        virtual void soap_print_fault(FILE*);
    #ifndef WITH_LEAN
    #ifndef WITH_COMPAT
        /// Print fault to stream
        virtual void soap_stream_fault(std::ostream&);
    #endif
        /// Write fault to buffer
        virtual char *soap_sprint_fault(char *buf, size_t len);
    #endif
        //
        /// Web service synchronous operation 'FECAESolicitar' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FECAESolicitar(_afip3__FECAESolicitar *afip3__FECAESolicitar, _afip3__FECAESolicitarResponse &afip3__FECAESolicitarResponse) { return this->FECAESolicitar(NULL, NULL, afip3__FECAESolicitar, afip3__FECAESolicitarResponse); }
        /// Web service synchronous operation 'FECAESolicitar' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FECAESolicitar(const char *soap_endpoint_url, const char *soap_action, _afip3__FECAESolicitar *afip3__FECAESolicitar, _afip3__FECAESolicitarResponse &afip3__FECAESolicitarResponse) { return this->send_FECAESolicitar(soap_endpoint_url, soap_action, afip3__FECAESolicitar) || this->recv_FECAESolicitar(afip3__FECAESolicitarResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FECAESolicitar' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FECAESolicitar(const char *soap_endpoint_url, const char *soap_action, _afip3__FECAESolicitar *afip3__FECAESolicitar);
        /// Web service asynchronous operation 'recv_FECAESolicitar' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FECAESolicitar(_afip3__FECAESolicitarResponse &afip3__FECAESolicitarResponse);
        //
        /// Web service synchronous operation 'FECompTotXRequest' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FECompTotXRequest(_afip3__FECompTotXRequest *afip3__FECompTotXRequest, _afip3__FECompTotXRequestResponse &afip3__FECompTotXRequestResponse) { return this->FECompTotXRequest(NULL, NULL, afip3__FECompTotXRequest, afip3__FECompTotXRequestResponse); }
        /// Web service synchronous operation 'FECompTotXRequest' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FECompTotXRequest(const char *soap_endpoint_url, const char *soap_action, _afip3__FECompTotXRequest *afip3__FECompTotXRequest, _afip3__FECompTotXRequestResponse &afip3__FECompTotXRequestResponse) { return this->send_FECompTotXRequest(soap_endpoint_url, soap_action, afip3__FECompTotXRequest) || this->recv_FECompTotXRequest(afip3__FECompTotXRequestResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FECompTotXRequest' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FECompTotXRequest(const char *soap_endpoint_url, const char *soap_action, _afip3__FECompTotXRequest *afip3__FECompTotXRequest);
        /// Web service asynchronous operation 'recv_FECompTotXRequest' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FECompTotXRequest(_afip3__FECompTotXRequestResponse &afip3__FECompTotXRequestResponse);
        //
        /// Web service synchronous operation 'FEDummy' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FEDummy(_afip3__FEDummy *afip3__FEDummy, _afip3__FEDummyResponse &afip3__FEDummyResponse) { return this->FEDummy(NULL, NULL, afip3__FEDummy, afip3__FEDummyResponse); }
        /// Web service synchronous operation 'FEDummy' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FEDummy(const char *soap_endpoint_url, const char *soap_action, _afip3__FEDummy *afip3__FEDummy, _afip3__FEDummyResponse &afip3__FEDummyResponse) { return this->send_FEDummy(soap_endpoint_url, soap_action, afip3__FEDummy) || this->recv_FEDummy(afip3__FEDummyResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FEDummy' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FEDummy(const char *soap_endpoint_url, const char *soap_action, _afip3__FEDummy *afip3__FEDummy);
        /// Web service asynchronous operation 'recv_FEDummy' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FEDummy(_afip3__FEDummyResponse &afip3__FEDummyResponse);
        //
        /// Web service synchronous operation 'FECompUltimoAutorizado' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FECompUltimoAutorizado(_afip3__FECompUltimoAutorizado *afip3__FECompUltimoAutorizado, _afip3__FECompUltimoAutorizadoResponse &afip3__FECompUltimoAutorizadoResponse) { return this->FECompUltimoAutorizado(NULL, NULL, afip3__FECompUltimoAutorizado, afip3__FECompUltimoAutorizadoResponse); }
        /// Web service synchronous operation 'FECompUltimoAutorizado' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FECompUltimoAutorizado(const char *soap_endpoint_url, const char *soap_action, _afip3__FECompUltimoAutorizado *afip3__FECompUltimoAutorizado, _afip3__FECompUltimoAutorizadoResponse &afip3__FECompUltimoAutorizadoResponse) { return this->send_FECompUltimoAutorizado(soap_endpoint_url, soap_action, afip3__FECompUltimoAutorizado) || this->recv_FECompUltimoAutorizado(afip3__FECompUltimoAutorizadoResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FECompUltimoAutorizado' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FECompUltimoAutorizado(const char *soap_endpoint_url, const char *soap_action, _afip3__FECompUltimoAutorizado *afip3__FECompUltimoAutorizado);
        /// Web service asynchronous operation 'recv_FECompUltimoAutorizado' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FECompUltimoAutorizado(_afip3__FECompUltimoAutorizadoResponse &afip3__FECompUltimoAutorizadoResponse);
        //
        /// Web service synchronous operation 'FECompConsultar' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FECompConsultar(_afip3__FECompConsultar *afip3__FECompConsultar, _afip3__FECompConsultarResponse &afip3__FECompConsultarResponse) { return this->FECompConsultar(NULL, NULL, afip3__FECompConsultar, afip3__FECompConsultarResponse); }
        /// Web service synchronous operation 'FECompConsultar' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FECompConsultar(const char *soap_endpoint_url, const char *soap_action, _afip3__FECompConsultar *afip3__FECompConsultar, _afip3__FECompConsultarResponse &afip3__FECompConsultarResponse) { return this->send_FECompConsultar(soap_endpoint_url, soap_action, afip3__FECompConsultar) || this->recv_FECompConsultar(afip3__FECompConsultarResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FECompConsultar' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FECompConsultar(const char *soap_endpoint_url, const char *soap_action, _afip3__FECompConsultar *afip3__FECompConsultar);
        /// Web service asynchronous operation 'recv_FECompConsultar' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FECompConsultar(_afip3__FECompConsultarResponse &afip3__FECompConsultarResponse);
        //
        /// Web service synchronous operation 'FECAEARegInformativo' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FECAEARegInformativo(_afip3__FECAEARegInformativo *afip3__FECAEARegInformativo, _afip3__FECAEARegInformativoResponse &afip3__FECAEARegInformativoResponse) { return this->FECAEARegInformativo(NULL, NULL, afip3__FECAEARegInformativo, afip3__FECAEARegInformativoResponse); }
        /// Web service synchronous operation 'FECAEARegInformativo' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FECAEARegInformativo(const char *soap_endpoint_url, const char *soap_action, _afip3__FECAEARegInformativo *afip3__FECAEARegInformativo, _afip3__FECAEARegInformativoResponse &afip3__FECAEARegInformativoResponse) { return this->send_FECAEARegInformativo(soap_endpoint_url, soap_action, afip3__FECAEARegInformativo) || this->recv_FECAEARegInformativo(afip3__FECAEARegInformativoResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FECAEARegInformativo' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FECAEARegInformativo(const char *soap_endpoint_url, const char *soap_action, _afip3__FECAEARegInformativo *afip3__FECAEARegInformativo);
        /// Web service asynchronous operation 'recv_FECAEARegInformativo' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FECAEARegInformativo(_afip3__FECAEARegInformativoResponse &afip3__FECAEARegInformativoResponse);
        //
        /// Web service synchronous operation 'FECAEASolicitar' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FECAEASolicitar(_afip3__FECAEASolicitar *afip3__FECAEASolicitar, _afip3__FECAEASolicitarResponse &afip3__FECAEASolicitarResponse) { return this->FECAEASolicitar(NULL, NULL, afip3__FECAEASolicitar, afip3__FECAEASolicitarResponse); }
        /// Web service synchronous operation 'FECAEASolicitar' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FECAEASolicitar(const char *soap_endpoint_url, const char *soap_action, _afip3__FECAEASolicitar *afip3__FECAEASolicitar, _afip3__FECAEASolicitarResponse &afip3__FECAEASolicitarResponse) { return this->send_FECAEASolicitar(soap_endpoint_url, soap_action, afip3__FECAEASolicitar) || this->recv_FECAEASolicitar(afip3__FECAEASolicitarResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FECAEASolicitar' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FECAEASolicitar(const char *soap_endpoint_url, const char *soap_action, _afip3__FECAEASolicitar *afip3__FECAEASolicitar);
        /// Web service asynchronous operation 'recv_FECAEASolicitar' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FECAEASolicitar(_afip3__FECAEASolicitarResponse &afip3__FECAEASolicitarResponse);
        //
        /// Web service synchronous operation 'FECAEASinMovimientoConsultar' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FECAEASinMovimientoConsultar(_afip3__FECAEASinMovimientoConsultar *afip3__FECAEASinMovimientoConsultar, _afip3__FECAEASinMovimientoConsultarResponse &afip3__FECAEASinMovimientoConsultarResponse) { return this->FECAEASinMovimientoConsultar(NULL, NULL, afip3__FECAEASinMovimientoConsultar, afip3__FECAEASinMovimientoConsultarResponse); }
        /// Web service synchronous operation 'FECAEASinMovimientoConsultar' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FECAEASinMovimientoConsultar(const char *soap_endpoint_url, const char *soap_action, _afip3__FECAEASinMovimientoConsultar *afip3__FECAEASinMovimientoConsultar, _afip3__FECAEASinMovimientoConsultarResponse &afip3__FECAEASinMovimientoConsultarResponse) { return this->send_FECAEASinMovimientoConsultar(soap_endpoint_url, soap_action, afip3__FECAEASinMovimientoConsultar) || this->recv_FECAEASinMovimientoConsultar(afip3__FECAEASinMovimientoConsultarResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FECAEASinMovimientoConsultar' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FECAEASinMovimientoConsultar(const char *soap_endpoint_url, const char *soap_action, _afip3__FECAEASinMovimientoConsultar *afip3__FECAEASinMovimientoConsultar);
        /// Web service asynchronous operation 'recv_FECAEASinMovimientoConsultar' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FECAEASinMovimientoConsultar(_afip3__FECAEASinMovimientoConsultarResponse &afip3__FECAEASinMovimientoConsultarResponse);
        //
        /// Web service synchronous operation 'FECAEASinMovimientoInformar' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FECAEASinMovimientoInformar(_afip3__FECAEASinMovimientoInformar *afip3__FECAEASinMovimientoInformar, _afip3__FECAEASinMovimientoInformarResponse &afip3__FECAEASinMovimientoInformarResponse) { return this->FECAEASinMovimientoInformar(NULL, NULL, afip3__FECAEASinMovimientoInformar, afip3__FECAEASinMovimientoInformarResponse); }
        /// Web service synchronous operation 'FECAEASinMovimientoInformar' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FECAEASinMovimientoInformar(const char *soap_endpoint_url, const char *soap_action, _afip3__FECAEASinMovimientoInformar *afip3__FECAEASinMovimientoInformar, _afip3__FECAEASinMovimientoInformarResponse &afip3__FECAEASinMovimientoInformarResponse) { return this->send_FECAEASinMovimientoInformar(soap_endpoint_url, soap_action, afip3__FECAEASinMovimientoInformar) || this->recv_FECAEASinMovimientoInformar(afip3__FECAEASinMovimientoInformarResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FECAEASinMovimientoInformar' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FECAEASinMovimientoInformar(const char *soap_endpoint_url, const char *soap_action, _afip3__FECAEASinMovimientoInformar *afip3__FECAEASinMovimientoInformar);
        /// Web service asynchronous operation 'recv_FECAEASinMovimientoInformar' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FECAEASinMovimientoInformar(_afip3__FECAEASinMovimientoInformarResponse &afip3__FECAEASinMovimientoInformarResponse);
        //
        /// Web service synchronous operation 'FECAEAConsultar' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FECAEAConsultar(_afip3__FECAEAConsultar *afip3__FECAEAConsultar, _afip3__FECAEAConsultarResponse &afip3__FECAEAConsultarResponse) { return this->FECAEAConsultar(NULL, NULL, afip3__FECAEAConsultar, afip3__FECAEAConsultarResponse); }
        /// Web service synchronous operation 'FECAEAConsultar' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FECAEAConsultar(const char *soap_endpoint_url, const char *soap_action, _afip3__FECAEAConsultar *afip3__FECAEAConsultar, _afip3__FECAEAConsultarResponse &afip3__FECAEAConsultarResponse) { return this->send_FECAEAConsultar(soap_endpoint_url, soap_action, afip3__FECAEAConsultar) || this->recv_FECAEAConsultar(afip3__FECAEAConsultarResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FECAEAConsultar' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FECAEAConsultar(const char *soap_endpoint_url, const char *soap_action, _afip3__FECAEAConsultar *afip3__FECAEAConsultar);
        /// Web service asynchronous operation 'recv_FECAEAConsultar' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FECAEAConsultar(_afip3__FECAEAConsultarResponse &afip3__FECAEAConsultarResponse);
        //
        /// Web service synchronous operation 'FEParamGetCotizacion' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetCotizacion(_afip3__FEParamGetCotizacion *afip3__FEParamGetCotizacion, _afip3__FEParamGetCotizacionResponse &afip3__FEParamGetCotizacionResponse) { return this->FEParamGetCotizacion(NULL, NULL, afip3__FEParamGetCotizacion, afip3__FEParamGetCotizacionResponse); }
        /// Web service synchronous operation 'FEParamGetCotizacion' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetCotizacion(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetCotizacion *afip3__FEParamGetCotizacion, _afip3__FEParamGetCotizacionResponse &afip3__FEParamGetCotizacionResponse) { return this->send_FEParamGetCotizacion(soap_endpoint_url, soap_action, afip3__FEParamGetCotizacion) || this->recv_FEParamGetCotizacion(afip3__FEParamGetCotizacionResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FEParamGetCotizacion' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FEParamGetCotizacion(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetCotizacion *afip3__FEParamGetCotizacion);
        /// Web service asynchronous operation 'recv_FEParamGetCotizacion' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FEParamGetCotizacion(_afip3__FEParamGetCotizacionResponse &afip3__FEParamGetCotizacionResponse);
        //
        /// Web service synchronous operation 'FEParamGetTiposTributos' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetTiposTributos(_afip3__FEParamGetTiposTributos *afip3__FEParamGetTiposTributos, _afip3__FEParamGetTiposTributosResponse &afip3__FEParamGetTiposTributosResponse) { return this->FEParamGetTiposTributos(NULL, NULL, afip3__FEParamGetTiposTributos, afip3__FEParamGetTiposTributosResponse); }
        /// Web service synchronous operation 'FEParamGetTiposTributos' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetTiposTributos(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetTiposTributos *afip3__FEParamGetTiposTributos, _afip3__FEParamGetTiposTributosResponse &afip3__FEParamGetTiposTributosResponse) { return this->send_FEParamGetTiposTributos(soap_endpoint_url, soap_action, afip3__FEParamGetTiposTributos) || this->recv_FEParamGetTiposTributos(afip3__FEParamGetTiposTributosResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FEParamGetTiposTributos' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FEParamGetTiposTributos(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetTiposTributos *afip3__FEParamGetTiposTributos);
        /// Web service asynchronous operation 'recv_FEParamGetTiposTributos' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FEParamGetTiposTributos(_afip3__FEParamGetTiposTributosResponse &afip3__FEParamGetTiposTributosResponse);
        //
        /// Web service synchronous operation 'FEParamGetTiposMonedas' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetTiposMonedas(_afip3__FEParamGetTiposMonedas *afip3__FEParamGetTiposMonedas, _afip3__FEParamGetTiposMonedasResponse &afip3__FEParamGetTiposMonedasResponse) { return this->FEParamGetTiposMonedas(NULL, NULL, afip3__FEParamGetTiposMonedas, afip3__FEParamGetTiposMonedasResponse); }
        /// Web service synchronous operation 'FEParamGetTiposMonedas' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetTiposMonedas(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetTiposMonedas *afip3__FEParamGetTiposMonedas, _afip3__FEParamGetTiposMonedasResponse &afip3__FEParamGetTiposMonedasResponse) { return this->send_FEParamGetTiposMonedas(soap_endpoint_url, soap_action, afip3__FEParamGetTiposMonedas) || this->recv_FEParamGetTiposMonedas(afip3__FEParamGetTiposMonedasResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FEParamGetTiposMonedas' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FEParamGetTiposMonedas(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetTiposMonedas *afip3__FEParamGetTiposMonedas);
        /// Web service asynchronous operation 'recv_FEParamGetTiposMonedas' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FEParamGetTiposMonedas(_afip3__FEParamGetTiposMonedasResponse &afip3__FEParamGetTiposMonedasResponse);
        //
        /// Web service synchronous operation 'FEParamGetTiposIva' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetTiposIva(_afip3__FEParamGetTiposIva *afip3__FEParamGetTiposIva, _afip3__FEParamGetTiposIvaResponse &afip3__FEParamGetTiposIvaResponse) { return this->FEParamGetTiposIva(NULL, NULL, afip3__FEParamGetTiposIva, afip3__FEParamGetTiposIvaResponse); }
        /// Web service synchronous operation 'FEParamGetTiposIva' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetTiposIva(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetTiposIva *afip3__FEParamGetTiposIva, _afip3__FEParamGetTiposIvaResponse &afip3__FEParamGetTiposIvaResponse) { return this->send_FEParamGetTiposIva(soap_endpoint_url, soap_action, afip3__FEParamGetTiposIva) || this->recv_FEParamGetTiposIva(afip3__FEParamGetTiposIvaResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FEParamGetTiposIva' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FEParamGetTiposIva(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetTiposIva *afip3__FEParamGetTiposIva);
        /// Web service asynchronous operation 'recv_FEParamGetTiposIva' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FEParamGetTiposIva(_afip3__FEParamGetTiposIvaResponse &afip3__FEParamGetTiposIvaResponse);
        //
        /// Web service synchronous operation 'FEParamGetTiposOpcional' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetTiposOpcional(_afip3__FEParamGetTiposOpcional *afip3__FEParamGetTiposOpcional, _afip3__FEParamGetTiposOpcionalResponse &afip3__FEParamGetTiposOpcionalResponse) { return this->FEParamGetTiposOpcional(NULL, NULL, afip3__FEParamGetTiposOpcional, afip3__FEParamGetTiposOpcionalResponse); }
        /// Web service synchronous operation 'FEParamGetTiposOpcional' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetTiposOpcional(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetTiposOpcional *afip3__FEParamGetTiposOpcional, _afip3__FEParamGetTiposOpcionalResponse &afip3__FEParamGetTiposOpcionalResponse) { return this->send_FEParamGetTiposOpcional(soap_endpoint_url, soap_action, afip3__FEParamGetTiposOpcional) || this->recv_FEParamGetTiposOpcional(afip3__FEParamGetTiposOpcionalResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FEParamGetTiposOpcional' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FEParamGetTiposOpcional(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetTiposOpcional *afip3__FEParamGetTiposOpcional);
        /// Web service asynchronous operation 'recv_FEParamGetTiposOpcional' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FEParamGetTiposOpcional(_afip3__FEParamGetTiposOpcionalResponse &afip3__FEParamGetTiposOpcionalResponse);
        //
        /// Web service synchronous operation 'FEParamGetTiposConcepto' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetTiposConcepto(_afip3__FEParamGetTiposConcepto *afip3__FEParamGetTiposConcepto, _afip3__FEParamGetTiposConceptoResponse &afip3__FEParamGetTiposConceptoResponse) { return this->FEParamGetTiposConcepto(NULL, NULL, afip3__FEParamGetTiposConcepto, afip3__FEParamGetTiposConceptoResponse); }
        /// Web service synchronous operation 'FEParamGetTiposConcepto' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetTiposConcepto(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetTiposConcepto *afip3__FEParamGetTiposConcepto, _afip3__FEParamGetTiposConceptoResponse &afip3__FEParamGetTiposConceptoResponse) { return this->send_FEParamGetTiposConcepto(soap_endpoint_url, soap_action, afip3__FEParamGetTiposConcepto) || this->recv_FEParamGetTiposConcepto(afip3__FEParamGetTiposConceptoResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FEParamGetTiposConcepto' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FEParamGetTiposConcepto(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetTiposConcepto *afip3__FEParamGetTiposConcepto);
        /// Web service asynchronous operation 'recv_FEParamGetTiposConcepto' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FEParamGetTiposConcepto(_afip3__FEParamGetTiposConceptoResponse &afip3__FEParamGetTiposConceptoResponse);
        //
        /// Web service synchronous operation 'FEParamGetPtosVenta' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetPtosVenta(_afip3__FEParamGetPtosVenta *afip3__FEParamGetPtosVenta, _afip3__FEParamGetPtosVentaResponse &afip3__FEParamGetPtosVentaResponse) { return this->FEParamGetPtosVenta(NULL, NULL, afip3__FEParamGetPtosVenta, afip3__FEParamGetPtosVentaResponse); }
        /// Web service synchronous operation 'FEParamGetPtosVenta' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetPtosVenta(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetPtosVenta *afip3__FEParamGetPtosVenta, _afip3__FEParamGetPtosVentaResponse &afip3__FEParamGetPtosVentaResponse) { return this->send_FEParamGetPtosVenta(soap_endpoint_url, soap_action, afip3__FEParamGetPtosVenta) || this->recv_FEParamGetPtosVenta(afip3__FEParamGetPtosVentaResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FEParamGetPtosVenta' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FEParamGetPtosVenta(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetPtosVenta *afip3__FEParamGetPtosVenta);
        /// Web service asynchronous operation 'recv_FEParamGetPtosVenta' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FEParamGetPtosVenta(_afip3__FEParamGetPtosVentaResponse &afip3__FEParamGetPtosVentaResponse);
        //
        /// Web service synchronous operation 'FEParamGetTiposCbte' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetTiposCbte(_afip3__FEParamGetTiposCbte *afip3__FEParamGetTiposCbte, _afip3__FEParamGetTiposCbteResponse &afip3__FEParamGetTiposCbteResponse) { return this->FEParamGetTiposCbte(NULL, NULL, afip3__FEParamGetTiposCbte, afip3__FEParamGetTiposCbteResponse); }
        /// Web service synchronous operation 'FEParamGetTiposCbte' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetTiposCbte(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetTiposCbte *afip3__FEParamGetTiposCbte, _afip3__FEParamGetTiposCbteResponse &afip3__FEParamGetTiposCbteResponse) { return this->send_FEParamGetTiposCbte(soap_endpoint_url, soap_action, afip3__FEParamGetTiposCbte) || this->recv_FEParamGetTiposCbte(afip3__FEParamGetTiposCbteResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FEParamGetTiposCbte' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FEParamGetTiposCbte(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetTiposCbte *afip3__FEParamGetTiposCbte);
        /// Web service asynchronous operation 'recv_FEParamGetTiposCbte' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FEParamGetTiposCbte(_afip3__FEParamGetTiposCbteResponse &afip3__FEParamGetTiposCbteResponse);
        //
        /// Web service synchronous operation 'FEParamGetTiposDoc' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetTiposDoc(_afip3__FEParamGetTiposDoc *afip3__FEParamGetTiposDoc, _afip3__FEParamGetTiposDocResponse &afip3__FEParamGetTiposDocResponse) { return this->FEParamGetTiposDoc(NULL, NULL, afip3__FEParamGetTiposDoc, afip3__FEParamGetTiposDocResponse); }
        /// Web service synchronous operation 'FEParamGetTiposDoc' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetTiposDoc(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetTiposDoc *afip3__FEParamGetTiposDoc, _afip3__FEParamGetTiposDocResponse &afip3__FEParamGetTiposDocResponse) { return this->send_FEParamGetTiposDoc(soap_endpoint_url, soap_action, afip3__FEParamGetTiposDoc) || this->recv_FEParamGetTiposDoc(afip3__FEParamGetTiposDocResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FEParamGetTiposDoc' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FEParamGetTiposDoc(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetTiposDoc *afip3__FEParamGetTiposDoc);
        /// Web service asynchronous operation 'recv_FEParamGetTiposDoc' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FEParamGetTiposDoc(_afip3__FEParamGetTiposDocResponse &afip3__FEParamGetTiposDocResponse);
        //
        /// Web service synchronous operation 'FEParamGetTiposPaises' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetTiposPaises(_afip3__FEParamGetTiposPaises *afip3__FEParamGetTiposPaises, _afip3__FEParamGetTiposPaisesResponse &afip3__FEParamGetTiposPaisesResponse) { return this->FEParamGetTiposPaises(NULL, NULL, afip3__FEParamGetTiposPaises, afip3__FEParamGetTiposPaisesResponse); }
        /// Web service synchronous operation 'FEParamGetTiposPaises' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int FEParamGetTiposPaises(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetTiposPaises *afip3__FEParamGetTiposPaises, _afip3__FEParamGetTiposPaisesResponse &afip3__FEParamGetTiposPaisesResponse) { return this->send_FEParamGetTiposPaises(soap_endpoint_url, soap_action, afip3__FEParamGetTiposPaises) || this->recv_FEParamGetTiposPaises(afip3__FEParamGetTiposPaisesResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_FEParamGetTiposPaises' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_FEParamGetTiposPaises(const char *soap_endpoint_url, const char *soap_action, _afip3__FEParamGetTiposPaises *afip3__FEParamGetTiposPaises);
        /// Web service asynchronous operation 'recv_FEParamGetTiposPaises' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_FEParamGetTiposPaises(_afip3__FEParamGetTiposPaisesResponse &afip3__FEParamGetTiposPaisesResponse);
    };
#endif
